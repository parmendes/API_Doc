<?xml version="1.0"?>
<doc>
    <assembly>
        <name>MyBackstageAPI</name>
    </assembly>
    <members>
        <member name="M:MyBackstageAPI.Controllers.WeatherForecastController.Get">
            <summary>
            Handles GET requests to retrieve a list of weather forecasts.
            This method is available in both API versions 1.0 and 2.0.
            </summary>
            <returns>A list of weather forecasts.</returns>
        </member>
        <member name="M:MyBackstageAPI.Controllers.WeatherForecastController.GetSummaryList">
            <summary>
            Handles GET requests to retrieve the list of weather summaries.
            This method is only available in API version 2.0.
            </summary>
            <returns>A list of weather summaries.</returns>
        </member>
        <member name="M:MyBackstageAPI.Controllers.WeatherForecastController.Post(MyBackstageAPI.WeatherForecast)">
            <summary>
            Handles POST requests to add a new weather forecast.
            </summary>
            <param name="forecast">The weather forecast to add.</param>
            <returns>The newly created weather forecast.</returns>
            <remarks>
            Example of a request body:
            
            ```json
            POST /WeatherForecast
            {
                "Date": "2022-01-01T00:00:00",
                "TemperatureC": 23,
                "TemperatureF": 74,
                "Summary": "Sunny"
            }
            ```
            </remarks>
        </member>
        <member name="M:MyBackstageAPI.Controllers.WeatherForecastController.Put(System.DateTime,MyBackstageAPI.WeatherForecast)">
            <summary>
            Handles PUT requests to update an existing weather forecast.
            </summary>
            <param name="date">The date of the forecast to update.</param>
            <param name="forecast">The updated weather forecast data.</param>
            <returns>The updated weather forecast or a 404 Not Found status if the forecast doesn't exist.</returns>
        </member>
        <member name="M:MyBackstageAPI.Controllers.WeatherForecastController.Delete(System.DateTime)">
            <summary>
            Handles DELETE requests to remove a weather forecast.
            </summary>
            <param name="date">The date of the forecast to delete.</param>
            <returns>A 204 No Content status.</returns>
        </member>
        <member name="P:MyBackstageAPI.WeatherForecast.Date">
            <summary>
            The date of the forecast.
            </summary>
        </member>
        <member name="P:MyBackstageAPI.WeatherForecast.TemperatureC">
            <summary>
            Temperature in Celsius.
            </summary>
        </member>
        <member name="P:MyBackstageAPI.WeatherForecast.TemperatureF">
            <summary>
            A short weather description.
            </summary>
        </member>
        <member name="P:MyBackstageAPI.WeatherForecast.Summary">
            <summary>
            A short weather description.
            </summary>
        </member>
    </members>
</doc>
